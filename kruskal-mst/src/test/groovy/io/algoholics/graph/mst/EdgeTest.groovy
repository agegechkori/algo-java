/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package io.algoholics.graph.mst

import spock.lang.Specification

class EdgeTest extends Specification {

    def "test getters"() {
        given:
        def edge = new Edge<Integer>(1, 2, 4.56)

        when:
        def weight = edge.getWeight()

        then:
        Double.compare(weight, 4.56) == 0

        when:
        def source = edge.getSource()

        then:
        source == 1

        when:
        def target = edge.getTarget()

        then:
        target == 2
    }

    def "test equals"() {
        given:
        def edge1 = new Edge<Integer>(1, 2, 4.56)
        def edge1_1 = edge1
        def edge2 = new Edge<Integer>(1, 2, 4.56)
        def edge3 = new Edge<Integer>(1, 3, 4.56)
        def edge4 = new Edge<Integer>(3, 2, 4.56)
        def edge5 = new Edge<Integer>(1, 2, 4.57)

        expect:
        !edge1.is(edge2) && edge1 == edge2
        !edge2.is(edge1) && edge2 == edge1
        !edge1.is(edge3) && !edge1.equals(edge3)
        !edge1.is(edge4) && !edge1.equals(edge4)
        !edge1.is(edge5) && !edge1.equals(edge5)
        edge1.is(edge1_1) && edge1.equals(edge1_1)
        !edge1.is(null) && edge1 != null
    }

    def "test hashCode"() {
        given:
        def edge1 = new Edge<Integer>(1, 2, 4.56)
        def edge1_1 = edge1
        def edge2 = new Edge<Integer>(1, 2, 4.56)
        def edge3 = new Edge<Integer>(1, 3, 4.56)

        expect:
        edge1.hashCode() == edge2.hashCode()
        edge1.hashCode() == edge1_1.hashCode()
        edge1.hashCode() != edge3.hashCode()
    }

    def "test get other"() {
        given:
        def edge = new Edge<Integer>(1, 2, 4.56)

        expect:
        edge.getOther(1) == 2
        edge.getOther(2) == 1

        when:
        edge.getOther(3)

        then:
        thrown(IllegalArgumentException)
    }
}
