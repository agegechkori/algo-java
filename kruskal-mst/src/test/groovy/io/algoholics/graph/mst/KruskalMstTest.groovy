/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package io.algoholics.graph.mst

import spock.lang.Specification

class KruskalMstTest extends Specification {

    def "test simple graph"() {
        given:
        def kruskalMst = new KuskalMst()
        def graph = new Graph()
        graph.addEdge(new Edge<Integer>(4, 5, 0.35))
        graph.addEdge(new Edge<Integer>(4, 7, 0.37))
        graph.addEdge(new Edge<Integer>(5, 7, 0.28))
        graph.addEdge(new Edge<Integer>(0, 7, 0.16))
        graph.addEdge(new Edge<Integer>(1, 5, 0.32))
        graph.addEdge(new Edge<Integer>(0, 4, 0.38))
        graph.addEdge(new Edge<Integer>(2, 3, 0.17))
        graph.addEdge(new Edge<Integer>(1, 7, 0.19))
        graph.addEdge(new Edge<Integer>(0, 2, 0.26))
        graph.addEdge(new Edge<Integer>(1, 2, 0.36))
        graph.addEdge(new Edge<Integer>(1, 3, 0.29))
        graph.addEdge(new Edge<Integer>(2, 7, 0.34))
        graph.addEdge(new Edge<Integer>(6, 2, 0.40))
        graph.addEdge(new Edge<Integer>(3, 6, 0.52))
        graph.addEdge(new Edge<Integer>(6, 0, 0.58))
        graph.addEdge(new Edge<Integer>(6, 4, 0.93))

        when:
        def actualMst = kruskalMst.mst(graph)

        then:
        actualMst == Set.of(new Edge<Integer>(4, 5, 0.35), new Edge<Integer>(5, 7, 0.28),
                new Edge<Integer>(0, 7, 0.16), new Edge<Integer>(2, 3, 0.17),
                new Edge<Integer>(1, 7, 0.19), new Edge<Integer>(0, 2, 0.26),
                new Edge<Integer>(6, 2, 0.40))
    }
}
